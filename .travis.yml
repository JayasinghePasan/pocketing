# we are using miniconda python
language: generic
sudo: required
dist: trusty

matrix:
  include:
    - env: PYTHON_VERSION=2.7
    - env: PYTHON_VERSION=3.4
    - env: PYTHON_VERSION=3.5
    - env: PYTHON_VERSION=3.6
    - env: PYTHON_VERSION=3.7

before_deploy:
# extract the version from the version file
- export PP_VERSION=`python -c "exec(open('pocketing/version.py','r').read()); print(__version__)"`
# tag the release and if it's already tagged chill
- git tag $PP_VERSION || true

deploy:
- provider: pypi
  user: mikedh
  on:
    condition: $PYTHON_VERSION = '3.6'
    branch: master
  password: $PYPI_PW


install:
- if [[ "$PYTHON_VERSION" == "2.7" ]]; then wget --quiet https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh
  -O miniconda.sh; else wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
  -O miniconda.sh; fi
- bash miniconda.sh -b -p $HOME/miniconda
- export PATH="$HOME/miniconda/bin:$PATH"
- conda config --set always_yes yes --set changeps1 no
- conda config --add channels conda-forge
- conda update -q conda
- conda info -a
- conda create -q -n test-environment python=$PYTHON_VERSION nomkl numpy scipy trimesh shapely rtree
- source activate test-environment

# make sure we parked our car in the right spot
- python -c "import os,sys;assert '{}.{}'.format(*sys.version_info[:2])==os.environ['PYTHON_VERSION']"

# install
- pip install .

# install testing stuff
- pip install -q pytest pytest-cov coveralls

script:
# run main tests
# -W default means that warnings only prints the
# first instance of a warning rather than all of them
- pytest -W default --cov=pocketing tests/

after_success:
- coveralls